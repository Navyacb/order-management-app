{"ast":null,"code":"var _jsxFileName = \"D:\\\\Navya DCT\\\\think\\\\order-management-app\\\\order-management-client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { MenuList } from './MenuList';\nimport { OrdersList } from './OrdersList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [menus, setMenus] = useState([]);\n  const [orders, dispatch] = useReducer(reducer, []);\n  //const [orders,setOrders] = useState([])\n\n  function reducer(state, action) {\n    if (action.type === 'ADD_DATA') {\n      return [...state, action.payload];\n    }\n  }\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await Promise.all([axios.get('http://localhost:3030/menu-list'), axios.get('http://localhost:3030/order-list')]);\n        const [menu, order] = response;\n        setMenus(menu.data);\n        const result = order.data.map(ord => {\n          return {\n            ...ord\n          };\n        });\n        dispatch({\n          type: ADD_DATA,\n          payload: order.data\n        });\n      } catch (error) {\n        console.log('Error in getting data in App', error);\n      }\n    })();\n  }, []);\n  function updateOrder(data) {\n    setOrders(data);\n  }\n  function handleAddOrders(data) {\n    setOrders([...orders, data]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Order Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 57\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(MenuList, {\n        menus: menus,\n        handleAddOrders: handleAddOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), orders.length > 0 && /*#__PURE__*/_jsxDEV(OrdersList, {\n        orders: orders,\n        menus: menus,\n        updateOrder: updateOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"TWP/AAROcSNdMPpcuoZ8o1G+Mb8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useReducer","axios","MenuList","OrdersList","jsxDEV","_jsxDEV","App","_s","menus","setMenus","orders","dispatch","reducer","state","action","type","payload","response","Promise","all","get","menu","order","data","result","map","ord","ADD_DATA","error","console","log","updateOrder","setOrders","handleAddOrders","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/Navya DCT/think/order-management-app/order-management-client/src/App.js"],"sourcesContent":["import './App.css';\r\nimport {useState,useEffect, useReducer} from 'react'\r\nimport axios from 'axios'\r\nimport {MenuList} from './MenuList';\r\nimport { OrdersList } from './OrdersList';\r\n\r\nconst App = ()=>{\r\n  const [menus,setMenus] = useState([])\r\n  const [orders,dispatch] = useReducer(reducer,[])\r\n  //const [orders,setOrders] = useState([])\r\n\r\n  function reducer(state,action){\r\n    if(action.type==='ADD_DATA'){\r\n      return [...state,action.payload]\r\n    }\r\n  }\r\n \r\n  useEffect(()=>{\r\n    (async function(){\r\n      try{\r\n        const response = await Promise.all([axios.get('http://localhost:3030/menu-list'),\r\n        axios.get('http://localhost:3030/order-list')])\r\n        const [menu,order] = response\r\n          setMenus(menu.data)\r\n          const result = order.data.map(ord=>{\r\n            return {...ord}\r\n          })\r\n          dispatch({type:ADD_DATA,payload:order.data})\r\n      }\r\n      catch(error){\r\n        console.log('Error in getting data in App',error)\r\n      }\r\n\r\n    })()\r\n    },[])\r\n\r\n    \r\n    function updateOrder(data){\r\n          setOrders(data)\r\n    }\r\n\r\n    function handleAddOrders(data){\r\n      setOrders([...orders,data])\r\n    }\r\n                \r\n  return (\r\n    <div className='container'>\r\n       <h1 className='text-center'>Order Management</h1><br/><br/>\r\n       <div className='row'>\r\n            <MenuList menus={menus} handleAddOrders={handleAddOrders} />\r\n            {(orders.length>0) && <OrdersList orders={orders} menus={menus} updateOrder={updateOrder}/>}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}